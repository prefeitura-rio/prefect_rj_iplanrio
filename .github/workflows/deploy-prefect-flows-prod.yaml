name: Deploy Prefect flows (prod)

on:
  push:
    branches:
      - master
    paths:
      - pipelines/**
  workflow_dispatch:
    inputs:
      force_deploy:
        description: "Force deploy all flows (conflicts with pipeline option)"
        required: false
        type: boolean
        default: false
      debug:
        description: "Enable debug logging"
        required: false
        type: boolean
        default: false
      batch_size:
        description: "Number of concurrent deployments"
        required: false
        type: number
        default: 3
      cleanup_docker:
        description: "Clean up Docker images between batches"
        required: false
        type: boolean
        default: true
      max_retries:
        description: "Maximum number of retries for failed deployments"
        required: false
        type: number
        default: 2
      pipeline:
        description: "Deploy specific pipeline (conflicts with force deploy)"
        required: false
        type: string

jobs:
  deploy-prefect-prod-flows:
    name: Deploy Prefect prod flows
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Deploy Prefect flows
        uses: ./.github/actions/deploy-prefect-flows
        with:
          environment: prod
          pipelines_path: ./pipelines
          prefect_api_url: https://prefect.squirrel-regulus.ts.net/api
          ts_tags: tag:prefect-cicd
          ts_oauth_client_id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          ts_oauth_secret: ${{ secrets.TS_OAUTH_SECRET }}
          gh_token: ${{ secrets.GH_TOKEN }}
          force_deploy: ${{ github.event.inputs.force_deploy == 'true' && '1' || '0' }}
          debug: ${{ github.event.inputs.debug }}
          batch_size: ${{ github.event.inputs.batch_size || '3' }}
          cleanup_docker: ${{ github.event.inputs.cleanup_docker || 'true' }}
          max_retries: ${{ github.event.inputs.max_retries || '2' }}
          pipeline: ${{ github.event.inputs.pipeline }}
